{"version":3,"sources":["assets/logo.svg","components/UsersWithPicture.js","components/UsersWithOutPicture.js","components/SettingsUser.js","components/Dashboard.js","components/LogIn.js","App.js","index.js"],"names":["UserWithPicture","picture","src","crop","setCrop","setImage","alt","className","onChange","newCrop","imageStyle","width","ruleOfThirds","onImageLoaded","UsersWithOutPicture","SettingsUser","userInfo","name","rank","_id","useState","image","selectFile","aspect","result","setResult","handleSendImg","a","alert","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","height","ctx","getContext","pixelRatio","window","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","Promise","toBlob","blob","useEffect","Nfile","File","type","data","FormData","append","fetch","method","body","then","res","json","console","log","catch","err","error","id","hidden","e","preventDefault","docType","target","files","includes","URL","createObjectURL","htmlFor","defaultValue","onClick","charAt","toUpperCase","slice","href","Dashboard","toggle","logo","defaulInputs","email","password","LogIn","varToggle","setVarToggle","varinputs","setVarinputs","handleVerification","object","Object","values","indexOf","config","JSON","stringify","headers","fetching","url","sending","keys","length","resetInputs","getElementsByClassName","map","el","value","handleChange","onSubmit","placeholder","textContents","index","getElementById","textContent","access","App","toggleLogDash","setToggleLogDash","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.01ba85f5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9a2891f5.svg\";","import React from 'react';\r\nimport './UsersWithPicture.css'\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\n\r\nfunction UserWithPicture({picture,src,crop,setCrop,setImage}) {\r\n    return ( \r\n        <>\r\n            {\r\n                src === null ? \r\n                <img src={\"/upload/\"+picture} alt=\"profileImg\" className=\"UsersWithPicture-imgProfile\" />\r\n                :\r\n                <div className=\"SettingsUser-div-Crop\">\r\n                    <ReactCrop src={src} crop={crop} onChange={newCrop => setCrop(newCrop)} imageStyle={{width: \"200px\"}} ruleOfThirds={true} onImageLoaded={setImage} />\r\n                </div>\r\n            }\r\n        </>\r\n     );\r\n}\r\n\r\nexport default UserWithPicture;","import React from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './UsersWithOutPicture.css'\r\n\r\nfunction UsersWithOutPicture({src,crop,setCrop,setImage}) {\r\n    return ( \r\n        <>\r\n            {\r\n                src === null  ? \r\n                <div className=\"UsersWithOutPicture-div-1\" />\r\n                :\r\n                <div className=\"SettingsUser-div-Crop\">\r\n                    <ReactCrop src={src} crop={crop} onChange={newCrop => setCrop(newCrop)} imageStyle={{width: \"200px\"}} ruleOfThirds={true} onImageLoaded={setImage} />\r\n                </div>\r\n            }\r\n        </>\r\n     );\r\n}\r\n\r\nexport default UsersWithOutPicture;","import React,{useState,useEffect} from 'react';\r\nimport './SettingsUser.css'\r\nimport UserWithPicture from './UsersWithPicture';\r\nimport UsersWithOutPicture from './UsersWithOutPicture';\r\n\r\n\r\nfunction SettingsUser({userInfo}) {\r\n    let {name,rank,_id,picture} =userInfo\r\n    const [image, setImage] = useState(null);\r\n    const [src, selectFile] = useState(null);\r\n    const [crop, setCrop] = useState({ aspect: 1 / 1 })\r\n    const [result, setResult] = useState(null);\r\n\r\n    const handleProfilePicture = (e) =>{\r\n        e.preventDefault()\r\n        const docType = e.target.files[0].type;\r\n        const validExtensions = ['image/jpeg','image/jpg','image/png','image/gif']\r\n        if(validExtensions.includes(docType)){\r\n            // Archivo Valido\r\n            selectFile(URL.createObjectURL(e.target.files[0]))\r\n        }else{\r\n            // Archivo invalido\r\n            alert(\"No es un archivo invalido\")\r\n        }\r\n    }\r\n\r\n    const handleSendImg = async () =>{\r\n        if(crop.width === 0){\r\n            alert(\"Selecciona tu imagen y recortala\")\r\n        }else{\r\n            const canvas = document.createElement(\"canvas\");\r\n            const scaleX = image.naturalWidth / image.width;\r\n            const scaleY = image.naturalHeight / image.height;\r\n            canvas.width = crop.width;\r\n            canvas.height = crop.height;\r\n            const ctx = canvas.getContext(\"2d\");\r\n          \r\n            // New lines to be added\r\n            const pixelRatio = window.devicePixelRatio;\r\n            canvas.width = crop.width * pixelRatio;\r\n            canvas.height = crop.height * pixelRatio;\r\n            ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n            ctx.imageSmoothingQuality = \"high\";\r\n            ctx.drawImage(\r\n              image,\r\n              crop.x * scaleX,\r\n              crop.y * scaleY,\r\n              crop.width * scaleX,\r\n              crop.height * scaleY,\r\n              0,\r\n              0,\r\n              crop.width,\r\n              crop.height\r\n            );\r\n            return new Promise(() => {\r\n                canvas.toBlob(\r\n                  (blob) => {\r\n                      setResult(blob)\r\n                  },\r\n                  \"image/jpeg\",\r\n                  1\r\n                );\r\n              });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (result === null) {\r\n            return\r\n        }else{\r\n            const Nfile = new File([result],\"image.jpeg\",{type:\"image/jpeg\"})\r\n            const data = new FormData()\r\n            data.append('image',Nfile)\r\n            fetch(`http://localhost:9000/update-user/${_id}`,{\r\n                method: 'PUT',\r\n                body: data,\r\n            }).then((res) => {\r\n                res.json()\r\n                console.log(res)\r\n            })\r\n            .catch(err => console.error(err))\r\n        }\r\n    }, [result,_id]);\r\n\r\n    return ( \r\n        <>\r\n            <div className=\"SettingsUser-div-1\">\r\n                {\r\n                    picture === null ?  \r\n                    <UsersWithOutPicture  \r\n                    src={src} \r\n                    crop={crop} \r\n                    setCrop={setCrop}\r\n                    setImage ={setImage}\r\n                    />\r\n                    :\r\n                    <UserWithPicture \r\n                    picture={picture}\r\n                    src={src} \r\n                    crop={crop} \r\n                    setCrop={setCrop}\r\n                    setImage ={setImage}\r\n                    /> \r\n                }\r\n                <form className=\"SettingsUser-form-addImg\">\r\n                    <input type=\"file\" id=\"SettingsUser-input-file-1\" hidden={true} name=\"profilePicture\"  onChange={handleProfilePicture}/>\r\n                    {\r\n                     src === null ?\r\n                     <label className=\"SettingsUser-label-AddImg\" id=\"SettingsUser-btn-AddImg\" htmlFor=\"SettingsUser-input-file-1\">Añade una Imagen</label>\r\n                     :\r\n                     <input className=\"SettingsUser-btn-AddImg\" type=\"button\" defaultValue=\"Recorta y Envia\" onClick={handleSendImg} />\r\n                    }\r\n                </form>\r\n                <div className=\"SettingsUser-div-3\">\r\n                    <h1 className=\"SettingsUser-h1-name\">{name}</h1>\r\n                    <h3>{rank === null ? \"Usuario\":rank.charAt(0).toUpperCase() + rank.slice(1)}</h3>\r\n                    <p className=\"SettingsUser-p-1\">\r\n                        Hola soy Guillermo, un Desarrollador y Ilustrador vectorial . Este proyecto sigue en desarrollo.\r\n                        Para contrataciones:  <a href=\"https://www.freelancer.com/u/VGuillermoP\">Haga Click Aqui </a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n     );\r\n}\r\n\r\nexport default SettingsUser;","import React from 'react';\r\nimport logo from '../assets/logo.svg'\r\nimport './Dashboard.css'\r\nimport SettingsUser from './SettingsUser';\r\n\r\nfunction Dashboard({toggle,userInfo}) {\r\n    let {picture} =userInfo\r\n    console.log(picture)\r\n    return ( \r\n        <>\r\n        <div className=\"dashboard-div\">\r\n            <header className=\"dashboard-header\">\r\n                <nav className=\"dashboard-nav\">\r\n                    <img src={logo} alt=\"logo\" className=\"dashboard-img-logo\"/>\r\n                    <ul className=\"dashboard-ul-1\">\r\n                        <li className=\"dashboard-li-1\"><i className=\"fas fa-home\"></i></li>\r\n                        <li className=\"dashboard-li-1\"><i className=\"fas fa-cog\"></i></li>\r\n                        <li className=\"dashboard-li-1\"><i className=\"fas fa-tachometer-alt\"></i></li>\r\n                    </ul>\r\n                    <div className=\"dashboard-div-1\">\r\n                        <img className=\"dashboard-img-people\" alt=\"pf-img\" src={picture === null ? logo : \"/upload/\"+picture}/>\r\n                        <i className=\"fas fa-sign-out-alt dashboard-i-logout\" onClick={toggle}></i>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n            <SettingsUser userInfo={userInfo}/>\r\n        </div>\r\n\r\n\r\n        </>\r\n     );\r\n}\r\n\r\nexport default Dashboard;","import React,{useState} from 'react';\r\nimport './LogIn.css'\r\n\r\nconst defaulInputs = {name:\"\",email:\"\",password:\"\"}\r\nfunction LogIn({toggle}) {\r\n    const [varToggle, setVarToggle] = useState(false);\r\n    const [varinputs, setVarinputs] = useState(defaulInputs);\r\n    const handleToggleForm = (e) =>{\r\n        e.preventDefault()\r\n        resetInputs()\r\n        varToggle === false ? setVarToggle(true): setVarToggle(false)\r\n        let textContents = [\r\n            `Sign ${varToggle === true ? \"Up\":\"In\"} To Your Account`,\r\n            `Sign ${varToggle === true ? \"Up\":\"In\"} `,\r\n            `Sign ${varToggle === true ? \"Up\":\"In\"} Now`]\r\n        const IDs = [\"login-p-sign\",\"login-p-login-span\",\"login-p-create-ac\"]\r\n        IDs.map((el,index) => document.getElementById(el).textContent = textContents[index]  )\r\n    }\r\n    const handleVerification = (type) => {\r\n        let object = Object.values(varinputs)\r\n        object[0] = type\r\n        if (object.indexOf(\"\") === -1) {\r\n            // En realidad no importa diferenciar si es un formulario de registro o de acceso, ya que atraves del input name lo podremos distingir en el servidor\r\n            let config ={\r\n                method: \"POST\",\r\n                body: JSON.stringify(varinputs),\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\"\r\n                }}\r\n            const fetching = async(url)=>{\r\n                try {\r\n                    const sending = await fetch(url,config)\r\n                    const data = await sending.json()\r\n                    if (Object.keys(data).length === 1) {\r\n                        alert(\"No estamos aceptando Usuario ahora\")\r\n                    } else {\r\n                        toggle(data)\r\n                    }\r\n                } catch (error) {\r\n                    console.error(error)\r\n                }\r\n            }\r\n            fetching(\"http://localhost:9000/user\")\r\n            resetInputs()\r\n        } else {\r\n            alert(\"Campos vacios\")\r\n        }\r\n    }\r\n    const handleIndetificationForm = (e) =>{\r\n        e.preventDefault()\r\n        if (varToggle === true) {\r\n            handleVerification(varinputs.name)\r\n        } \r\n        else {\r\n            handleVerification(null)\r\n        }\r\n    }\r\n    const resetInputs = () =>{\r\n        setVarinputs(defaulInputs)\r\n        const reset = [...document.getElementsByClassName(\"login-input-1\")]\r\n        reset.map(el => el.value = \"\")\r\n    }\r\n    const handleChange = (e) => {\r\n        setVarinputs({\r\n            ...varinputs, [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"login-pre-div\">\r\n            <div className=\"login-div\">\r\n                <div className=\"login-welcome-page\">\r\n                    <p className=\"login-title\">Welcome Page</p>\r\n                    <p className=\"login-p-sign\" id=\"login-p-sign\">Sign In To Your Account</p>\r\n                </div>\r\n                <div className=\"login-pre-form\">\r\n                    <p className=\"login-p-hello\">Hello!</p>\r\n                    <p className=\"login-p-gm\">Good Morning</p>\r\n                    <p className=\"login-p-login\">\r\n                        <span className=\"login-p-login-span\" id=\"login-p-login-span\">Login </span>\r\n                         Your Account</p>\r\n                    <form onSubmit={handleIndetificationForm} className=\"login-form\">\r\n                        {\r\n                            varToggle === true &&\r\n                            <>\r\n                                <label htmlFor=\"name\" className=\"login-label\"></label>\r\n                                <input className=\"login-input-1\" type=\"text\" placeholder=\"First Name\" name=\"name\" onChange={handleChange} />\r\n                            </>\r\n                        }\r\n                        <label htmlFor=\"email\" className=\"login-label\"></label>\r\n                        <input className=\"login-input-1\" type=\"email\" placeholder=\"Email Address\" name=\"email\" onChange={handleChange} />\r\n                        <label htmlFor=\"password\"className=\"login-label\"></label>\r\n                        <input className=\"login-input-1\" type=\"password\" placeholder=\"Password\" name=\"password\" onChange={handleChange} />\r\n                        <div className=\"login-form-div\">\r\n                            <input type=\"checkbox\" name=\"remember\" id=\"login-label-remember\"/>\r\n                            <label htmlFor=\"login-label-remember\" className=\"login-label-remember\">Remember</label>\r\n                            <a href=\"https://www.google.co.ve/\" className=\"login-a-forgot\" >Forgot Password?</a>\r\n                        </div>\r\n                        <label htmlFor=\"submit\" className=\"login-label-submit\" >SUBMIT</label>\r\n                        <input name=\"submit\" id=\"submit\" type=\"submit\" hidden={true} />\r\n                        <p className=\"login-p-create-ac\" id=\"login-p-create-ac\" onClick={handleToggleForm}>Create Account</p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LogIn;","import Dashboard from \"./components/Dashboard\";\nimport LogIn from \"./components/LogIn\";\nimport React, { useState} from 'react';\n\nconst userInfo = { access: false,name: null,rank: null,picture: null}\n\nfunction App() {\n  const [toggleLogDash, setToggleLogDash] = useState(userInfo);\n  const toggle = (data) =>{\n    toggleLogDash.access === false ? setToggleLogDash({...toggleLogDash,...data}) : setToggleLogDash(userInfo)\n  }\n  return (\n    <>\n       {toggleLogDash.access === false ? <LogIn toggle={toggle} /> : <Dashboard toggle={toggle} userInfo={toggleLogDash}/>}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}